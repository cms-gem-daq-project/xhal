%define _package __package__
%define _longpackage __longpackage__
%define _packagename __packagename__
%define _version __version__
%define _short_release __short_release__
%define _prefix  __prefix__
#%%define _sources_dir __sources_dir__
%define _tmppath /tmp
#%%define _packagedir __packagedir__
%define _os __os__
%define _platform __platform__
%define _project __project__
%define _author __author__
%define _summary __summary__
%define _url __url__
%define _buildarch __buildarch__
#%%define _includedirs __includedirs__

%global _binaries_in_noarch_packages_terminate_build 0
%global _unpackaged_files_terminate_build 0

### find . -type d -wholename '*/lib/arm'
#%%global add_arm_libs %( if [ -d '%{_packagedir}/lib/arm' ]; then echo "1" ; else echo "0"; fi )
%global is_arm  %( if [[ '__buildarch__' =~ "arm" ]]; then echo "1" ; else echo "0"; fi )
%global not_arm  %( if [[ ! '__buildarch__' =~ "arm" ]]; then echo "1" ; else echo "0"; fi )

%global _find_debuginfo_opts -g

#
# Binary RPM specified attributed (lib and bin)
#
Name: %{_packagename}
Summary: %{_summary}
Version: %{_version}
Release: %{_release}
Packager: %{_author}
# BuildArch: %{_buildarch}
License: __license__
URL: %{_url}
# Source: %{_source_url}/%{_project}-%{_longpackage}-%{_version}-%{_short_release}.tbz2
BuildRoot: %{_tmppath}/%{_packagename}-%{_version}-%{_release}-buildroot
Prefix: %{_prefix}
%if 0%{?_requires}
Requires: __requires_list__
%endif

%if 0%{?_build_requires}
BuildRequires: __build_requires_list__
%endif

%if %{is_arm}
AutoReq: no
%endif

%description
__description__

%if %is_arm
%package -n ctp7-xhal-libs
Summary: Libraries for cross-compiling %{_packagename} dependent applications for CTP7
Prefix: /opt/gem-peta-stage/ctp7/%{_prefix}
Requires: gem-peta-stage-ctp7
BuildRequires: __build_requires_list__
BuildArch: noarch
AutoReq: no

%description -n ctp7-xhal-libs
Provides the %{_packagename} libraries for the CTP7.
These libraries are used when cross-compiling CTP7 applications.

%endif

## Only build devel RPMs for non-ARM
%if %not_arm
%package -n %{_packagename}-devel
Summary: Development files for %{_packagename}
Requires: %{_packagename}

%description -n %{_packagename}-devel
Development headers for the %{_packagename} package

%endif

## Only build debuginfo RPMs for non-ARM?
#%%%if %not_arm
%package -n %{_packagename}-debuginfo
Summary: Debuginfos for %{_packagename}
Requires: %{_packagename}, %{_packagename}-devel

%description -n %{_packagename}-debuginfo
Debuginfos for the %{_packagename} package

#%%%endif

# %pre

%prep
## if there is a Source tag that points to the tarball
#%%setup -q
mv %{_sourcedir}/%{_project}-%{_longpackage}-%{_version}-%{_short_release}.tbz2 ./
tar xjf %{_project}-%{_longpackage}-%{_version}-%{_short_release}.tbz2

## update extracted timestamps if doing a git build
find %{_project}/%{_packagename} -type f -iname '*.h' -print0 -exec touch {} \+
find %{_project}/%{_packagename} -type f -iname '*.cpp' -print0 -exec touch {} \+
find %{_project}/%{_packagename} -type f -iname '*.d' -print0 -exec touch {} \+
find %{_project}/%{_packagename} -type f -iname '*.o' -print0 -exec touch {} \+
find %{_project}/%{_packagename} -type f -iname '*.so*' -print0 -exec touch {} \+
find %{_project}/%{_packagename} -type l -iname '*.so*' -print0 -exec touch -h {} \+

%build
pushd %{_project}/%{_packagename}
TargetArch=%{_longpackage} make build -j4
popd

#
# Prepare the list of files that are the input to the binary and devel RPMs
#
%install
rm -rf %{buildroot}
pushd %{_project}/%{_packagename}
echo TargetArch=%{_longpackage} INSTALL_PREFIX=%{buildroot} make install
TargetArch=%{_longpackage} INSTALL_PREFIX=%{buildroot} make install
touch ChangeLog README.md LICENSE MAINTAINER.md CHANGELOG.md
popd

%if %is_arm
pushd %{_project}
mkdir -p %{buildroot}/opt/
cp -rfp --parents gem-peta-stage %{buildroot}/opt/
popd
%endif

## Manually run find-debuginfo because...?
## maybe only on x86_64?
/usr/lib/rpm/find-debuginfo.sh -g -m -r --strict-build-id

%clean
##rm -rf %{buildroot}

#
# Files that go in the binary RPM
#
%files
%defattr(-,root,root,0755)
%{_prefix}/lib/libxhal*.so*
%if %not_arm
%{_prefix}/lib/librpcman*.so*
%endif

%dir
##%%%{_prefix}/lib/librpcman.so*

%doc %{_project}/%{_packagename}/MAINTAINER.md
%doc %{_project}/%{_packagename}/README.md
%doc %{_project}/%{_packagename}/CHANGELOG.md
%license %{_project}/%{_packagename}/LICENSE

%if %is_arm

#### CTP7 libs ####
#
# Files that go in the binary RPM on the host machine for developing against card libraries
# Used to be in XHAL_ROOT/lib/arm
#
%files -n ctp7-xhal-libs
%defattr(-,root,root,0755)
%attr(0755,root,root) %{prefix}/lib/libxhal*.so*

## Tries to put in the /mnt/persistent tree
## %%%dir
## %%%docdir /opt/xhal
## %%%doc %{_project}/%{_packagename}/MAINTAINER.md
## %%%doc %{_project}/%{_packagename}/README.md
## %%%doc %{_project}/%{_packagename}/CHANGELOG.md
## %%%license %{_project}/%{_packagename}/LICENSE
%endif

#### Only build devel RPMs for non-ARM ####
%if %not_arm

#
# Files that go in the devel RPM
#
%files -n %{_packagename}-devel
%defattr(-,root,root,0755)

%dir
%{_prefix}/include/xhal

%doc %{_project}/%{_packagename}/MAINTAINER.md
%doc %{_project}/%{_packagename}/README.md
%doc %{_project}/%{_packagename}/CHANGELOG.md
%license %{_project}/%{_packagename}/LICENSE

%endif

#### Only build debuginfo RPMs for non-ARM? ####
#%%%if %not_arm
#
# Files that go in the debuginfo RPM
#
%files -n %{_packagename}-debuginfo
%defattr(-,root,root,0755)

%dir
/usr/lib/debug/%{_prefix}
/usr/src/debug/%{_packagename}-%{_version}

%doc %{_project}/%{_packagename}/MAINTAINER.md
%doc %{_project}/%{_packagename}/README.md
%doc %{_project}/%{_packagename}/CHANGELOG.md
%license %{_project}/%{_packagename}/LICENSE

#%%##%%%endif

%post

%preun

%postun

%changelog
